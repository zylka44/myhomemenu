{"version":3,"sources":["assets/banner.png","assets/kopytka.jpg","assets/spaghetti.jpg","assets/pizza.jpg","assets/sushi.jpg","assets/shakshuka.jpg","assets/khachapuri.jpg","assets/tomatosoup.jpg","assets/porridge.jpg","assets/broth.jpg","assets/fruitsoup.jpg","assets/ratatouille.jpg","assets/crepes.jpg","dishes.js","components/Banner.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Footer.js","components/SearchBox.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","dishes","id","name","meal","ingredients","Logo","alt","src","banner","height","style","margin","Card","graphics","className","CardList","dinners","imag","kopytka","spaghetti","pizza","sushi","shakshuka","khachapuri","tomatosoup","porridge","broth","fruitsoup","ratatouille","crepes","dishesArray","map","din","i","key","padding","Scroll","props","overflowY","children","Footer","fontFamily","SearchBox","searchChange","content","type","placeholder","onChange","App","onSearchDish","event","setState","dishSearchField","target","value","onSearchMeal","mealSearchField","onSearchIngredients","ingredientsSearchField","state","sDish","this","toLowerCase","sMeal","sIngs","split","ing","filterDishes","filter","dish","includes","every","ingS","some","Banner","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7280f83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.e375bf9d.png\";","module.exports = __webpack_public_path__ + \"static/media/kopytka.7da0bf06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spaghetti.d8e3d598.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza.ea98aef8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sushi.5783d63d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shakshuka.8eb8395b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khachapuri.270d9a7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tomatosoup.fc2dc9d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/porridge.549429a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/broth.ec9967ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fruitsoup.30e4c912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.e0573021.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crepes.7a7e9628.jpg\";","const dishes = [\r\n    {\r\n        id: 1,\r\n        name: 'kopytka',\r\n        meal: 'dinner',\r\n        ingredients: ['flour', 'potatos', 'eggs']\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'spaghetti',\r\n        meal: 'dinner',\r\n        ingredients: ['pasta', 'onion', 'garlic', 'carrot', 'celery', 'minced meat', \r\n                    'tomato passata', 'dried basil']\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'pizza',\r\n        meal: 'supper',\r\n        ingredients: ['flour', 'yeast', 'olive oil', 'tomato sauce', 'mozzarella', 'basil']\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'sushi',\r\n        meal: 'supper',\r\n        ingredients: ['rice', 'rice vinegar', 'nori', 'cucumber', 'smoked salmon', 'coriander']\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'shakshuka',\r\n        meal: 'breakfast',\r\n        ingredients: ['onion', 'garlic', 'peppers', 'tomatos', 'cumin', 'eggs', 'coriander', 'chive']\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'khachapuri',\r\n        meal: 'dinner or supper',\r\n        ingredients: ['flour', 'yeast', 'potatos', 'cheese', 'butter', 'eggs']\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'tomato soup',\r\n        meal: 'dinner',\r\n        ingredients: ['broth', 'totamto sauce', 'pasta']\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'porridge',\r\n        meal: 'breakfast',\r\n        ingredients: ['oat flakes', 'milk', 'jam']\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'broth',\r\n        meal: 'dinner',\r\n        ingredients: ['meat', 'carrot', 'parsley', 'onion', 'celery', 'leek', 'allspice', 'bay leaf']\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'fruit soup',\r\n        meal: 'breakfast or supper',\r\n        ingredients: ['flour', 'milk', 'eggs', 'cherry compote']\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'ratatouille',\r\n        meal: 'dinner or supper',\r\n        ingredients: ['onion', 'garlic', 'pepper', 'tomato', 'zucchini', 'eggplant']\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'crepes',\r\n        meal: 'dinner or supper',\r\n        ingredients: ['eggs', 'milk', 'flour', 'butter']\r\n    },\r\n];\r\n\r\nexport default dishes;\r\n","import React from 'react';\r\nimport banner from '../assets/banner.png';\r\n\r\nconst Logo = () => {\r\n    return <img alt=\"kopytka\" src={banner} height='300vh' style={{ margin: '0 auto'}} />\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Card = ({name, meal, graphics}) => {\r\n    return (\r\n        <div className=\"tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt={name} src={graphics} height=\"150vh\" />\r\n            <h2>{name}</h2>\r\n            <p>{meal}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport kopytka from '../assets/kopytka.jpg';\r\nimport spaghetti from '../assets/spaghetti.jpg';\r\nimport pizza from '../assets/pizza.jpg';\r\nimport sushi from '../assets/sushi.jpg';\r\nimport shakshuka from '../assets/shakshuka.jpg';\r\nimport khachapuri from '../assets/khachapuri.jpg';\r\nimport tomatosoup from '../assets/tomatosoup.jpg';\r\nimport porridge from '../assets/porridge.jpg';\r\nimport broth from '../assets/broth.jpg';\r\nimport fruitsoup from '../assets/fruitsoup.jpg';\r\nimport ratatouille from '../assets/ratatouille.jpg';\r\nimport crepes from '../assets/crepes.jpg';\r\n\r\nconst CardList = ({dinners}) => {\r\n    const imag = [\r\n        kopytka, spaghetti, pizza, sushi, shakshuka,\r\n        khachapuri, tomatosoup, porridge, broth, fruitsoup, ratatouille, crepes\r\n    ];\r\n    const dishesArray = dinners.map((din, i) => {\r\n        return <Card \r\n            key={i}\r\n            id={dinners[i].id} \r\n            name={dinners[i].name} \r\n            meal={dinners[i].meal} \r\n            graphics={imag[dinners[i].id - 1]} \r\n        />\r\n    })\r\n    return (\r\n        <div style={{ padding: '0 5vh'}}>\r\n            {dishesArray}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', height: '100vh'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <h3 style={{ fontFamily: 'Baloo Bhaina 2'}}>Żaneta Czapiewska 2020</h3>\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange, content }) => {\r\n    return (\r\n        <div>\r\n            <input \r\n                className='tc pa2 ma4 b--light-gray bg-light-gray'\r\n                type='search' \r\n                placeholder={content}\r\n                onChange={searchChange}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport dishes from '../dishes';\r\nimport Banner from '../components/Banner';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport Footer from '../components/Footer';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dishes: dishes,\r\n            dishSearchField: '',\r\n            mealSearchField: '',\r\n            ingredientsSearchField: ''\r\n        }\r\n    }\r\n\r\n    onSearchDish = (event) => {\r\n        this.setState({ dishSearchField: event.target.value});\r\n    }\r\n\r\n    onSearchMeal = (event) => {\r\n        this.setState({ mealSearchField: event.target.value});\r\n    }\r\n\r\n    onSearchIngredients = (event) => {\r\n        this.setState({ ingredientsSearchField: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const sDish = this.state.dishSearchField.toLowerCase();\r\n        const sMeal = this.state.mealSearchField.toLowerCase();\r\n        const sIngs = this.state.ingredientsSearchField.split(' ').map(ing => ing.toLowerCase());\r\n        const filterDishes = this.state.dishes.filter(dish => {\r\n            return dish.name.toLowerCase().includes(sDish)\r\n        }).filter(dish => {\r\n            return dish.meal.toLowerCase().includes(sMeal)\r\n        }).filter(dish => {\r\n            return sIngs.every(ingS => dish.ingredients.some(ing => ing.includes(ingS)))\r\n        });\r\n        \r\n        return (\r\n            <div className='tc'>\r\n                <Banner />\r\n                <div className='flex justify-center'>\r\n                    <SearchBox searchChange={this.onSearchDish} content={'search a dish'} />\r\n                    <SearchBox searchChange={this.onSearchIngredients} content={'ingedients you have'} />\r\n                    <SearchBox searchChange={this.onSearchMeal} content={'search a meal'} />\r\n                </div>\r\n                <Scroll>\r\n                    <CardList dinners={filterDishes} /> \r\n                </Scroll>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}